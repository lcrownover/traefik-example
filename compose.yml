---
networks:
  frontend:
    name: frontend
    driver: bridge

services:

  traefik:
    image: traefik:v3.2
    container_name: traefik
    networks:
      - frontend
    ports:
      - 80:80
      - 443:443
      - 8080:8080
    environment:
      - CF_DNS_API_TOKEN=${CF_DNS_API_TOKEN}
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - ./config/traefik.yaml:/etc/traefik/traefik.yaml:ro
      - ./config/rules.yaml:/etc/traefik/rules.yaml:ro
      - ./data/certs/:/var/traefik/certs/:rw
    env_file: .env

  testy:
    image: lcrownover/testy
    build:
      ./app
    container_name: testy
    networks:
      - frontend
    labels:
      - traefik.enable=true
      - traefik.http.routers.testy.rule=Host(`testy.crownover.xyz`)
      - traefik.http.routers.testy.entrypoints=web
      - traefik.http.routers.testy-https.tls=true
      - traefik.http.routers.testy-https.tls.certresolver=cloudflare
      - traefik.http.routers.testy-https.entrypoints=websecure
      - traefik.http.routers.testy-https.rule=Host(`testy.crownover.xyz`)

  whoami:
    image: "traefik/whoami"
    container_name: "simple-service"
    labels:
      - traefik.enable=true
      - traefik.http.routers.whoami.rule=Host(`whoami.crownover.xyz`)
      - traefik.http.routers.whoami.entrypoints=web
      - traefik.http.routers.whoami-https.tls=true
      - traefik.http.routers.whoami-https.tls.certresolver=cloudflare
      - traefik.http.routers.whoami-https.entrypoints=websecure
      - traefik.http.routers.whoami-https.rule=Host(`whoami.crownover.xyz`)
